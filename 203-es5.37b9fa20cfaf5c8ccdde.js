!function(){function n(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function e(n,e){for(var t=0;t<e.length;t++){var i=e[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(n,i.key,i)}}(self.webpackChunkngx_markdown=self.webpackChunkngx_markdown||[]).push([[203],{4203:function(t,i,o){"use strict";o.r(i),o.d(i,{PluginsModule:function(){return w}});var a,r=o(1041),s=o(9550),l=o(5725),p=o(9136),u=o(2750),m=o(2561),c=o(5366),g=o(9299),d=o(7770),h=o(5965),f=o(3070),x=[{path:"",component:(a=function(){function t(e){n(this,t),this.elementRef=e,this.emojiMarkdown="# I :heart: ngx-markdown",this.katexMarkdown="#### `katex` directive example\n\n```latex\nf(x) = \\int_{-\\infty}^\\infty \\hat f(\\xi) e^{2 \\pi i \\xi x} d\\xi\n```\n\n$f(x) = \\int_{-\\infty}^\\infty \\hat f(\\xi) e^{2 \\pi i \\xi x} d\\xi$"}var i,o,a;return i=t,(o=[{key:"ngOnInit",value:function(){this.setHeadings()}},{key:"setHeadings",value:function(){var n=[];this.elementRef.nativeElement.querySelectorAll("h2").forEach(function(e){return n.push(e)}),this.headings=n}}])&&e(i.prototype,o),a&&e(i,a),t}(),a.\u0275fac=function(n){return new(n||a)(c.Y36(c.SBq))},a.\u0275cmp=c.Xpm({type:a,selectors:[["app-plugins"]],decls:70,vars:13,consts:[[3,"headings"],["id","emoji"],[3,"src"],["fxLayout","column","fxLayout.gt-sm","row","fxLayoutGap","16px"],["appearance","fill","color","accent","fxFlex.gt-sm","calc(50% - 8px)"],["matInput","",3,"ngModel","ngModelChange"],["emoji","","fxFlex.gt-sm","calc(50% - 8px)",3,"data"],["emoji",""],["id","line-numbers"],["lineNumbers",""],["lineNumbers","",3,"start"],["id","line-highlight"],["lineHighlight","",3,"line","lineOffset"],["id","katex"],["katex","","fxFlex.gt-sm","calc(50% - 8px)",3,"data"]],template:function(n,e){1&n&&(c.TgZ(0,"app-scrollspy-nav-layout",0),c.TgZ(1,"h1"),c._uU(2,"Plugins"),c.qZA(),c.TgZ(3,"section"),c.TgZ(4,"h2",1),c._uU(5,"Emoji plugin"),c.qZA(),c.TgZ(6,"markdown"),c._uU(7,"\n      #### Emoji-Toolkit file to include\n      ```javascript\n      node_modules/emoji-toolkit/lib/js/joypixels.min.js\n      ```\n      #### Directive\n      `emoji` - activate emoji plugin\n      ### Example\n    "),c.qZA(),c.TgZ(8,"markdown"),c._uU(9," Using `emoji` input property on `markdown` component or directive (this is not available when using pipe or service) allows you to convert shortnames to native unicode emojis. "),c.qZA(),c._UZ(10,"markdown",2),c.TgZ(11,"markdown"),c._uU(12," The example below illustrate `emoji` directive in action. "),c.qZA(),c.TgZ(13,"div",3),c.TgZ(14,"mat-form-field",4),c.TgZ(15,"textarea",5),c.NdJ("ngModelChange",function(n){return e.emojiMarkdown=n}),c.qZA(),c.qZA(),c._UZ(16,"markdown",6),c.qZA(),c.TgZ(17,"markdown",7),c._uU(18," > :blue_book: You can refer to this [Emoji Cheat Sheet](https://github.com/ikatyang/emoji-cheat-sheet/blob/master/README.md) for a complete list of _shortnames_. "),c.qZA(),c.qZA(),c.TgZ(19,"section"),c.TgZ(20,"h2",8),c._uU(21,"Line Numbers plugin"),c.qZA(),c.TgZ(22,"markdown"),c._uU(23,"\n      #### Prism files to include\n      ```javascript\n      node_modules/prismjs/plugins/line-numbers/prism-line-numbers.css\n      node_modules/prismjs/plugins/line-numbers/prism-line-numbers.js\n      ```\n      #### Directive\n      `lineNumbers` - activate line numbers plugin\n      #### Attributes\n      `start` - offset number for the first display line\n      ### Example\n    "),c.qZA(),c.TgZ(24,"markdown"),c._uU(25," Using `lineNumbers` input property on `markdown` component or directive (this is not available when using pipe or service) allows you to add line number at the beginning of each lines of code block. "),c.qZA(),c._UZ(26,"markdown",2),c.TgZ(27,"markdown"),c._uU(28," The example below uses `lineNumbers` directive which uses default line offset of 1. "),c.qZA(),c.TgZ(29,"markdown",9),c._uU(30,"\n      ```javascript\n      var result = square(2);\n\n      function square(number) {\n        return number * number;\n      }\n      ```\n    "),c.qZA(),c.TgZ(31,"markdown"),c._uU(32," Optionally you can use `start` to specify the offset number for the first display line. "),c.qZA(),c.TgZ(33,"markdown"),c._uU(34," In the example below line offset is set to 5 using `start` input property. "),c.qZA(),c.TgZ(35,"markdown",10),c._uU(36,"\n      ```javascript\n      var result = root(2);\n\n      function root(x, n) {\n        try {\n          var negate = n % 2 == 1 && x < 0;\n          if(negate)\n            x = -x;\n          var possible = Math.pow(x, 1 / n);\n          n = Math.pow(possible, n);\n          if(Math.abs(x - n) < 1 && (x > 0 == n > 0))\n            return negate ? -possible : possible;\n        } catch(e){ }\n      }\n      ```\n    "),c.qZA(),c.qZA(),c.TgZ(37,"section"),c.TgZ(38,"h2",11),c._uU(39,"Line Highlight plugin"),c.qZA(),c.TgZ(40,"markdown"),c._uU(41,"\n      #### Prism files to include\n      ```javascript\n      node_modules/prismjs/plugins/line-highlight/prism-line-highlight.css\n      node_modules/prismjs/plugins/line-highlight/prism-line-highlight.js\n      ```\n      #### Directive\n      `lineHighlight` - activate line highlight plugin\n      #### Attributes\n      `line` - lines to highlight (i.e.: 6, 11-15)"),c._UZ(42,"br"),c._uU(43,"\n      `lineOffset` - starting offset for line numbers\n      ### Example\n    "),c.qZA(),c.TgZ(44,"markdown"),c._uU(45,"\n      You can highlight different lines by adding `lineHighlight` directive on the `markdown` component/directive.\n\n      Use `line` input property to specify the line(s) to highlight and optionally there is a `lineOffset` property to specify the starting line of code your snippet represents.\n    "),c.qZA(),c._UZ(46,"markdown",2),c.TgZ(47,"markdown"),c._uU(48," In the example below `line` 6 and 10 to 16 are highlight using a `lineOffset` of 5. "),c.qZA(),c.TgZ(49,"markdown",12),c._uU(50,"\n      ```javascript\n      var result = root(2);\n\n      function root(x, n) {\n        try {\n          var negate = n % 2 == 1 && x < 0;\n          if(negate)\n            x = -x;\n          var possible = Math.pow(x, 1 / n);\n          n = Math.pow(possible, n);\n          if(Math.abs(x - n) < 1 && (x > 0 == n > 0))\n            return negate ? -possible : possible;\n        } catch(e){ }\n      }\n      ```\n    "),c.qZA(),c.qZA(),c.TgZ(51,"section"),c.TgZ(52,"h2",13),c._uU(53,"KaTeX plugin"),c.qZA(),c.TgZ(54,"markdown"),c._uU(55,"\n      #### KaTeX files to include\n      ```javascript\n      node_modules/katex/dist/katex.min.css\n      node_modules/katex/dist/katex.min.js\n      ```\n      #### Directive\n      `katex` - activate KaTeX plugin\n      #### Attributes\n      `katexOptions` - math rendering [options](https://katex.org/docs/options.html)"),c._UZ(56,"br"),c._uU(57,"\n      ### Example\n    "),c.qZA(),c.TgZ(58,"markdown"),c._uU(59," You can render KaTex expression by adding `katex` directive on the `markdown` component/directive. "),c.qZA(),c._UZ(60,"markdown",2),c.TgZ(61,"markdown"),c._uU(62," The example below illustrate `katex` directive in action. "),c.qZA(),c.TgZ(63,"div",3),c.TgZ(64,"mat-form-field",4),c.TgZ(65,"textarea",5),c.NdJ("ngModelChange",function(n){return e.katexMarkdown=n}),c.qZA(),c.qZA(),c._UZ(66,"markdown",14),c.qZA(),c.TgZ(67,"markdown"),c._uU(68,"\n      Optionally, you can specify math rendering [options](https://katex.org/docs/options.html) using `katexOptions` property.\n\n      **example.component.ts**\n      ```typescript\n      import { KatexOptions } from 'ngx-markdown';\n\n      public options: KatexOptions = {\n        displayMode: true,\n        throwOnError: false,\n        errorColor: '#cc0000',\n        ...\n      };\n      ```\n\n      **example.component.html**\n    "),c.qZA(),c._UZ(69,"markdown",2),c.qZA(),c.qZA()),2&n&&(c.Q6J("headings",e.headings),c.xp6(10),c.Q6J("src","app/plugins/remote/emoji.html"),c.xp6(5),c.Q6J("ngModel",e.emojiMarkdown),c.xp6(1),c.Q6J("data",e.emojiMarkdown),c.xp6(10),c.Q6J("src","app/plugins/remote/line-numbers.html"),c.xp6(9),c.Q6J("start",5),c.xp6(11),c.Q6J("src","app/plugins/remote/line-highlight.html"),c.xp6(3),c.Q6J("line","6, 10-16")("lineOffset",5),c.xp6(11),c.Q6J("src","app/plugins/remote/katex.html"),c.xp6(5),c.Q6J("ngModel",e.katexMarkdown),c.xp6(1),c.Q6J("data",e.katexMarkdown),c.xp6(3),c.Q6J("src","app/plugins/remote/katex-options.html"))},directives:[g.c,d.l,h.xw,h.SQ,f.KE,h.yH,s.Nt,r.Fj,r.JJ,r.On],styles:["[_nghost-%COMP%]{display:block}textarea[_ngcontent-%COMP%]{min-height:180px}"],changeDetection:0}),a)}],Z=function(){var e=function e(){n(this,e)};return e.\u0275fac=function(n){return new(n||e)},e.\u0275mod=c.oAB({type:e}),e.\u0275inj=c.cJS({imports:[[m.Bz.forChild(x)],m.Bz]}),e}();o(7386);var k,w=((k=function e(){n(this,e)}).\u0275fac=function(n){return new(n||k)},k.\u0275mod=c.oAB({type:k}),k.\u0275inj=c.cJS({imports:[[r.u5,l.JP.forChild(),s.c,Z,p.U,u.m]]}),k)}}])}();