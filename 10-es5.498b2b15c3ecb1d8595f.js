function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,n){for(var t=0;t<n.length;t++){var i=n[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function _createClass(e,n,t){return n&&_defineProperties(e.prototype,n),t&&_defineProperties(e,t),e}(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{"uG+s":function(e,n,t){"use strict";t.r(n),t.d(n,"PluginsModule",(function(){return k}));var i,o,a=t("8VHZ"),r=t("N2ZZ"),s=t("nQ6I"),l=t("dLyB"),c=t("PCNd"),p=t("Fk62"),u=t("Ub9n"),b=t("965z"),m=t("FfMK"),d=t("qQg5"),h=t("CsWY"),f=[{path:"",component:(i=function(){function e(n){_classCallCheck(this,e),this.elementRef=n,this.emojiMarkdown="# I :heart: ngx-markdown",this.katexMarkdown="#### `katex` directive example\n\n```latex\nf(x) = \\int_{-\\infty}^\\infty \\hat f(\\xi) e^{2 \\pi i \\xi x} d\\xi\n```\n\n$f(x) = \\int_{-\\infty}^\\infty \\hat f(\\xi) e^{2 \\pi i \\xi x} d\\xi$"}return _createClass(e,[{key:"ngOnInit",value:function(){this.setHeadings()}},{key:"setHeadings",value:function(){var e=[];this.elementRef.nativeElement.querySelectorAll("h2").forEach((function(n){return e.push(n)})),this.headings=e}}]),e}(),i.\u0275fac=function(e){return new(e||i)(u.Jb(u.l))},i.\u0275cmp=u.Db({type:i,selectors:[["app-plugins"]],decls:70,vars:13,consts:[[3,"headings"],["id","emoji"],[3,"src"],["fxLayout","column","fxLayout.gt-sm","row","fxLayoutGap","16px"],["appearance","fill","color","accent","fxFlex.gt-sm","calc(50% - 8px)"],["matInput","",3,"ngModel","ngModelChange"],["emoji","","fxFlex.gt-sm","calc(50% - 8px)",3,"data"],["emoji",""],["id","line-numbers"],["lineNumbers",""],["lineNumbers","",3,"start"],["id","line-highlight"],["lineHighlight","",3,"line","lineOffset"],["id","katex"],["katex","","fxFlex.gt-sm","calc(50% - 8px)",3,"data"]],template:function(e,n){1&e&&(u.Ob(0,"app-scrollspy-nav-layout",0),u.Ob(1,"h1"),u.uc(2,"Plugins"),u.Nb(),u.Ob(3,"section"),u.Ob(4,"h2",1),u.uc(5,"Emoji plugin"),u.Nb(),u.Ob(6,"markdown"),u.uc(7,"\n      #### Emoji-Toolkit file to include\n      ```javascript\n      node_modules/emoji-toolkit/lib/js/joypixels.min.js\n      ```\n      #### Directive\n      `emoji` - activate emoji plugin\n      ### Example\n    "),u.Nb(),u.Ob(8,"markdown"),u.uc(9," Using `emoji` input property on `markdown` component or directive (this is not available when using pipe or service) allows you to convert shortnames to native unicode emojis. "),u.Nb(),u.Kb(10,"markdown",2),u.Ob(11,"markdown"),u.uc(12," The example below illustrate `emoji` directive in action. "),u.Nb(),u.Ob(13,"div",3),u.Ob(14,"mat-form-field",4),u.Ob(15,"textarea",5),u.Wb("ngModelChange",(function(e){return n.emojiMarkdown=e})),u.Nb(),u.Nb(),u.Kb(16,"markdown",6),u.Nb(),u.Ob(17,"markdown",7),u.uc(18," > :blue_book: You can refer to this [Emoji Cheat Sheet](https://github.com/ikatyang/emoji-cheat-sheet/blob/master/README.md) for a complete list of _shortnames_. "),u.Nb(),u.Nb(),u.Ob(19,"section"),u.Ob(20,"h2",8),u.uc(21,"Line Numbers plugin"),u.Nb(),u.Ob(22,"markdown"),u.uc(23,"\n      #### Prism files to include\n      ```javascript\n      node_modules/prismjs/plugins/line-numbers/prism-line-numbers.css\n      node_modules/prismjs/plugins/line-numbers/prism-line-numbers.js\n      ```\n      #### Directive\n      `lineNumbers` - activate line numbers plugin\n      #### Attributes\n      `start` - offset number for the first display line\n      ### Example\n    "),u.Nb(),u.Ob(24,"markdown"),u.uc(25," Using `lineNumbers` input property on `markdown` component or directive (this is not available when using pipe or service) allows you to add line number at the beginning of each lines of code block. "),u.Nb(),u.Kb(26,"markdown",2),u.Ob(27,"markdown"),u.uc(28," The example below uses `lineNumbers` directive which uses default line offset of 1. "),u.Nb(),u.Ob(29,"markdown",9),u.uc(30,"\n      ```javascript\n      var result = square(2);\n\n      function square(number) {\n        return number * number;\n      }\n      ```\n    "),u.Nb(),u.Ob(31,"markdown"),u.uc(32," Optionally you can use `start` to specify the offset number for the first display line. "),u.Nb(),u.Ob(33,"markdown"),u.uc(34," In the example below line offset is set to 5 using `start` input property. "),u.Nb(),u.Ob(35,"markdown",10),u.uc(36,"\n      ```javascript\n      var result = root(2);\n\n      function root(x, n) {\n        try {\n          var negate = n % 2 == 1 && x < 0;\n          if(negate)\n            x = -x;\n          var possible = Math.pow(x, 1 / n);\n          n = Math.pow(possible, n);\n          if(Math.abs(x - n) < 1 && (x > 0 == n > 0))\n            return negate ? -possible : possible;\n        } catch(e){ }\n      }\n      ```\n    "),u.Nb(),u.Nb(),u.Ob(37,"section"),u.Ob(38,"h2",11),u.uc(39,"Line Highlight plugin"),u.Nb(),u.Ob(40,"markdown"),u.uc(41,"\n      #### Prism files to include\n      ```javascript\n      node_modules/prismjs/plugins/line-highlight/prism-line-highlight.css\n      node_modules/prismjs/plugins/line-highlight/prism-line-highlight.js\n      ```\n      #### Directive\n      `lineHighlight` - activate line highlight plugin\n      #### Attributes\n      `line` - lines to highlight (i.e.: 6, 11-15)"),u.Kb(42,"br"),u.uc(43,"\n      `lineOffset` - starting offset for line numbers\n      ### Example\n    "),u.Nb(),u.Ob(44,"markdown"),u.uc(45,"\n      You can highlight different lines by adding `lineHighlight` directive on the `markdown` component/directive.\n\n      Use `line` input property to specify the line(s) to highlight and optionally there is a `lineOffset` property to specify the starting line of code your snippet represents.\n    "),u.Nb(),u.Kb(46,"markdown",2),u.Ob(47,"markdown"),u.uc(48," In the example below `line` 6 and 10 to 16 are highlight using a `lineOffset` of 5. "),u.Nb(),u.Ob(49,"markdown",12),u.uc(50,"\n      ```javascript\n      var result = root(2);\n\n      function root(x, n) {\n        try {\n          var negate = n % 2 == 1 && x < 0;\n          if(negate)\n            x = -x;\n          var possible = Math.pow(x, 1 / n);\n          n = Math.pow(possible, n);\n          if(Math.abs(x - n) < 1 && (x > 0 == n > 0))\n            return negate ? -possible : possible;\n        } catch(e){ }\n      }\n      ```\n    "),u.Nb(),u.Nb(),u.Ob(51,"section"),u.Ob(52,"h2",13),u.uc(53,"KaTeX plugin"),u.Nb(),u.Ob(54,"markdown"),u.uc(55,"\n      #### KaTeX files to include\n      ```javascript\n      node_modules/katex/dist/katex.min.css\n      node_modules/katex/dist/katex.min.js\n      ```\n      #### Directive\n      `katex` - activate KaTeX plugin\n      #### Attributes\n      `katexOptions` - math rendering [options](https://katex.org/docs/options.html)"),u.Kb(56,"br"),u.uc(57,"\n      ### Example\n    "),u.Nb(),u.Ob(58,"markdown"),u.uc(59," You can render KaTex expression by adding `katex` directive on the `markdown` component/directive. "),u.Nb(),u.Kb(60,"markdown",2),u.Ob(61,"markdown"),u.uc(62," The example below illustrate `katex` directive in action. "),u.Nb(),u.Ob(63,"div",3),u.Ob(64,"mat-form-field",4),u.Ob(65,"textarea",5),u.Wb("ngModelChange",(function(e){return n.katexMarkdown=e})),u.Nb(),u.Nb(),u.Kb(66,"markdown",14),u.Nb(),u.Ob(67,"markdown"),u.uc(68,"\n      Optionally, you can specify math rendering [options](https://katex.org/docs/options.html) using `katexOptions` property.\n\n      **example.component.ts**\n      ```typescript\n      import { KatexOptions } from 'ngx-markdown';\n\n      public options: KatexOptions = {\n        displayMode: true,\n        throwOnError: false,\n        errorColor: '#cc0000',\n        ...\n      };\n      ```\n\n      **example.component.html**\n    "),u.Nb(),u.Kb(69,"markdown",2),u.Nb(),u.Nb()),2&e&&(u.ec("headings",n.headings),u.zb(10),u.ec("src","app/plugins/remote/emoji.html"),u.zb(5),u.ec("ngModel",n.emojiMarkdown),u.zb(1),u.ec("data",n.emojiMarkdown),u.zb(10),u.ec("src","app/plugins/remote/line-numbers.html"),u.zb(9),u.ec("start",5),u.zb(11),u.ec("src","app/plugins/remote/line-highlight.html"),u.zb(3),u.ec("line","6, 10-16")("lineOffset",5),u.zb(11),u.ec("src","app/plugins/remote/katex.html"),u.zb(5),u.ec("ngModel",n.katexMarkdown),u.zb(1),u.ec("data",n.katexMarkdown),u.zb(3),u.ec("src","app/plugins/remote/katex-options.html"))},directives:[b.a,m.a,d.d,d.e,h.a,d.b,r.a,a.a,a.e,a.g],styles:["[_nghost-%COMP%]{display:block}textarea[_ngcontent-%COMP%]{min-height:180px}"],changeDetection:0}),i)}],g=((o=function e(){_classCallCheck(this,e)}).\u0275mod=u.Hb({type:o}),o.\u0275inj=u.Gb({factory:function(e){return new(e||o)},imports:[[p.e.forChild(f)],p.e]}),o);t("SQXh");var x,k=((x=function e(){_classCallCheck(this,e)}).\u0275mod=u.Hb({type:x}),x.\u0275inj=u.Gb({factory:function(e){return new(e||x)},imports:[[a.c,s.a.forChild(),r.b,g,l.a,c.a]]}),x)}}]);