!function(){function n(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function e(n,e){for(var t=0;t<e.length;t++){var i=e[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(n,i.key,i)}}(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{"5xhF":function(t,i,o){"use strict";o.r(i),o.d(i,"PluginsModule",function(){return v});var a,r,s=o("3Pt+"),l=o("qFsG"),c=o("ZVb+"),b=o("kUWE"),u=o("mqvi"),p=o("tyNb"),m=o("fXoL"),d=o("meC2"),h=o("ZJmW"),f=o("XiUz"),g=o("kmnG"),x=[{path:"",component:(a=function(){function t(e){n(this,t),this.elementRef=e,this.emojiMarkdown="# I :heart: ngx-markdown",this.katexMarkdown="#### `katex` directive example\n\n```latex\nf(x) = \\int_{-\\infty}^\\infty \\hat f(\\xi) e^{2 \\pi i \\xi x} d\\xi\n```\n\n$f(x) = \\int_{-\\infty}^\\infty \\hat f(\\xi) e^{2 \\pi i \\xi x} d\\xi$"}var i,o,a;return i=t,(o=[{key:"ngOnInit",value:function(){this.setHeadings()}},{key:"setHeadings",value:function(){var n=[];this.elementRef.nativeElement.querySelectorAll("h2").forEach(function(e){return n.push(e)}),this.headings=n}}])&&e(i.prototype,o),a&&e(i,a),t}(),a.\u0275fac=function(n){return new(n||a)(m.Jb(m.l))},a.\u0275cmp=m.Db({type:a,selectors:[["app-plugins"]],decls:70,vars:13,consts:[[3,"headings"],["id","emoji"],[3,"src"],["fxLayout","column","fxLayout.gt-sm","row","fxLayoutGap","16px"],["appearance","fill","color","accent","fxFlex.gt-sm","calc(50% - 8px)"],["matInput","",3,"ngModel","ngModelChange"],["emoji","","fxFlex.gt-sm","calc(50% - 8px)",3,"data"],["emoji",""],["id","line-numbers"],["lineNumbers",""],["lineNumbers","",3,"start"],["id","line-highlight"],["lineHighlight","",3,"line","lineOffset"],["id","katex"],["katex","","fxFlex.gt-sm","calc(50% - 8px)",3,"data"]],template:function(n,e){1&n&&(m.Ob(0,"app-scrollspy-nav-layout",0),m.Ob(1,"h1"),m.uc(2,"Plugins"),m.Nb(),m.Ob(3,"section"),m.Ob(4,"h2",1),m.uc(5,"Emoji plugin"),m.Nb(),m.Ob(6,"markdown"),m.uc(7,"\n      #### Emoji-Toolkit file to include\n      ```javascript\n      node_modules/emoji-toolkit/lib/js/joypixels.min.js\n      ```\n      #### Directive\n      `emoji` - activate emoji plugin\n      ### Example\n    "),m.Nb(),m.Ob(8,"markdown"),m.uc(9," Using `emoji` input property on `markdown` component or directive (this is not available when using pipe or service) allows you to convert shortnames to native unicode emojis. "),m.Nb(),m.Kb(10,"markdown",2),m.Ob(11,"markdown"),m.uc(12," The example below illustrate `emoji` directive in action. "),m.Nb(),m.Ob(13,"div",3),m.Ob(14,"mat-form-field",4),m.Ob(15,"textarea",5),m.Wb("ngModelChange",function(n){return e.emojiMarkdown=n}),m.Nb(),m.Nb(),m.Kb(16,"markdown",6),m.Nb(),m.Ob(17,"markdown",7),m.uc(18," > :blue_book: You can refer to this [Emoji Cheat Sheet](https://github.com/ikatyang/emoji-cheat-sheet/blob/master/README.md) for a complete list of _shortnames_. "),m.Nb(),m.Nb(),m.Ob(19,"section"),m.Ob(20,"h2",8),m.uc(21,"Line Numbers plugin"),m.Nb(),m.Ob(22,"markdown"),m.uc(23,"\n      #### Prism files to include\n      ```javascript\n      node_modules/prismjs/plugins/line-numbers/prism-line-numbers.css\n      node_modules/prismjs/plugins/line-numbers/prism-line-numbers.js\n      ```\n      #### Directive\n      `lineNumbers` - activate line numbers plugin\n      #### Attributes\n      `start` - offset number for the first display line\n      ### Example\n    "),m.Nb(),m.Ob(24,"markdown"),m.uc(25," Using `lineNumbers` input property on `markdown` component or directive (this is not available when using pipe or service) allows you to add line number at the beginning of each lines of code block. "),m.Nb(),m.Kb(26,"markdown",2),m.Ob(27,"markdown"),m.uc(28," The example below uses `lineNumbers` directive which uses default line offset of 1. "),m.Nb(),m.Ob(29,"markdown",9),m.uc(30,"\n      ```javascript\n      var result = square(2);\n\n      function square(number) {\n        return number * number;\n      }\n      ```\n    "),m.Nb(),m.Ob(31,"markdown"),m.uc(32," Optionally you can use `start` to specify the offset number for the first display line. "),m.Nb(),m.Ob(33,"markdown"),m.uc(34," In the example below line offset is set to 5 using `start` input property. "),m.Nb(),m.Ob(35,"markdown",10),m.uc(36,"\n      ```javascript\n      var result = root(2);\n\n      function root(x, n) {\n        try {\n          var negate = n % 2 == 1 && x < 0;\n          if(negate)\n            x = -x;\n          var possible = Math.pow(x, 1 / n);\n          n = Math.pow(possible, n);\n          if(Math.abs(x - n) < 1 && (x > 0 == n > 0))\n            return negate ? -possible : possible;\n        } catch(e){ }\n      }\n      ```\n    "),m.Nb(),m.Nb(),m.Ob(37,"section"),m.Ob(38,"h2",11),m.uc(39,"Line Highlight plugin"),m.Nb(),m.Ob(40,"markdown"),m.uc(41,"\n      #### Prism files to include\n      ```javascript\n      node_modules/prismjs/plugins/line-highlight/prism-line-highlight.css\n      node_modules/prismjs/plugins/line-highlight/prism-line-highlight.js\n      ```\n      #### Directive\n      `lineHighlight` - activate line highlight plugin\n      #### Attributes\n      `line` - lines to highlight (i.e.: 6, 11-15)"),m.Kb(42,"br"),m.uc(43,"\n      `lineOffset` - starting offset for line numbers\n      ### Example\n    "),m.Nb(),m.Ob(44,"markdown"),m.uc(45,"\n      You can highlight different lines by adding `lineHighlight` directive on the `markdown` component/directive.\n\n      Use `line` input property to specify the line(s) to highlight and optionally there is a `lineOffset` property to specify the starting line of code your snippet represents.\n    "),m.Nb(),m.Kb(46,"markdown",2),m.Ob(47,"markdown"),m.uc(48," In the example below `line` 6 and 10 to 16 are highlight using a `lineOffset` of 5. "),m.Nb(),m.Ob(49,"markdown",12),m.uc(50,"\n      ```javascript\n      var result = root(2);\n\n      function root(x, n) {\n        try {\n          var negate = n % 2 == 1 && x < 0;\n          if(negate)\n            x = -x;\n          var possible = Math.pow(x, 1 / n);\n          n = Math.pow(possible, n);\n          if(Math.abs(x - n) < 1 && (x > 0 == n > 0))\n            return negate ? -possible : possible;\n        } catch(e){ }\n      }\n      ```\n    "),m.Nb(),m.Nb(),m.Ob(51,"section"),m.Ob(52,"h2",13),m.uc(53,"KaTeX plugin"),m.Nb(),m.Ob(54,"markdown"),m.uc(55,"\n      #### KaTeX files to include\n      ```javascript\n      node_modules/katex/dist/katex.min.css\n      node_modules/katex/dist/katex.min.js\n      ```\n      #### Directive\n      `katex` - activate KaTeX plugin\n      #### Attributes\n      `katexOptions` - math rendering [options](https://katex.org/docs/options.html)"),m.Kb(56,"br"),m.uc(57,"\n      ### Example\n    "),m.Nb(),m.Ob(58,"markdown"),m.uc(59," You can render KaTex expression by adding `katex` directive on the `markdown` component/directive. "),m.Nb(),m.Kb(60,"markdown",2),m.Ob(61,"markdown"),m.uc(62," The example below illustrate `katex` directive in action. "),m.Nb(),m.Ob(63,"div",3),m.Ob(64,"mat-form-field",4),m.Ob(65,"textarea",5),m.Wb("ngModelChange",function(n){return e.katexMarkdown=n}),m.Nb(),m.Nb(),m.Kb(66,"markdown",14),m.Nb(),m.Ob(67,"markdown"),m.uc(68,"\n      Optionally, you can specify math rendering [options](https://katex.org/docs/options.html) using `katexOptions` property.\n\n      **example.component.ts**\n      ```typescript\n      import { KatexOptions } from 'ngx-markdown';\n\n      public options: KatexOptions = {\n        displayMode: true,\n        throwOnError: false,\n        errorColor: '#cc0000',\n        ...\n      };\n      ```\n\n      **example.component.html**\n    "),m.Nb(),m.Kb(69,"markdown",2),m.Nb(),m.Nb()),2&n&&(m.ec("headings",e.headings),m.zb(10),m.ec("src","app/plugins/remote/emoji.html"),m.zb(5),m.ec("ngModel",e.emojiMarkdown),m.zb(1),m.ec("data",e.emojiMarkdown),m.zb(10),m.ec("src","app/plugins/remote/line-numbers.html"),m.zb(9),m.ec("start",5),m.zb(11),m.ec("src","app/plugins/remote/line-highlight.html"),m.zb(3),m.ec("line","6, 10-16")("lineOffset",5),m.zb(11),m.ec("src","app/plugins/remote/katex.html"),m.zb(5),m.ec("ngModel",e.katexMarkdown),m.zb(1),m.ec("data",e.katexMarkdown),m.zb(3),m.ec("src","app/plugins/remote/katex-options.html"))},directives:[d.a,h.a,f.d,f.e,g.b,f.b,l.a,s.a,s.e,s.g],styles:["[_nghost-%COMP%]{display:block}textarea[_ngcontent-%COMP%]{min-height:180px}"],changeDetection:0}),a)}],k=((r=function e(){n(this,e)}).\u0275mod=m.Hb({type:r}),r.\u0275inj=m.Gb({factory:function(n){return new(n||r)},imports:[[p.e.forChild(x)],p.e]}),r);o("WE6N");var w,v=((w=function e(){n(this,e)}).\u0275mod=m.Hb({type:w}),w.\u0275inj=m.Gb({factory:function(n){return new(n||w)},imports:[[s.c,c.a.forChild(),l.b,k,b.a,u.a]]}),w)}}])}();